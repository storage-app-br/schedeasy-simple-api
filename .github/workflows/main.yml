name: CI - sonar cloud

on:
  push:
    branches: ['develop']
    tags: ['v*.*.*']

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/schedeasy-simple-api
  FOLDER_NAME: ${{ github.event.repository.name }}-app

jobs:
  # run-ci:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     packages: write
  #     id-token: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #       with:
  #         install: true
  #         driver: docker-container  # üî• Usa driver compat√≠vel com cache
  #         driver-opts: network=host

  #     - name: Build development
  #       id: build-and-push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         push: false
  #         tags: ${{ env.FOLDER_NAME }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         load: true
  #         file: Dockerfile
  #         target: development

  #     - name: up containers
  #       run: docker compose -f docker-compose.ci.yml up -d

  #     - name: Wait for PostgreSQL to be ready
  #       run: |
  #         echo "Waiting for PostgreSQL to start..."
  #         for i in {1..30}; do
  #           if docker compose -f docker-compose.ci.yml exec -T db pg_isready --host=localhost --username=pguser --dbname=permissao; then
  #             echo "PostgreSQL is ready!"
  #             exit 0
  #           fi
  #           echo "PostgreSQL not ready yet. Retrying in 2 seconds..."
  #           sleep 2
  #         done
  #         echo "PostgreSQL did not start in time."
  #         exit 1

  #     - name: generate envs
  #       run: |
  #         docker compose -f docker-compose.ci.yml exec -u root -T app cp ./envs/.env.test.example ./envs/.env.test
  #         docker compose -f docker-compose.ci.yml exec -u root -T app cp ./envs/.env.e2e.example ./envs/.env.e2e

  #     - name: run unit and integration tests
  #       run: docker compose -f docker-compose.ci.yml run -T app yarn test:cov
      
  #     - uses: SonarSource/sonarqube-scan-action@v4
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  run-cd:
    runs-on: ubuntu-latest
    # needs: run-ci  # S√≥ executa SE os testes passarem
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and Push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1
        with: 
          kustomize-version: "5.5.0"

      - name: Update Kubernetes resources
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          cd k8s
          kustomize edit set image node-api=$DOCKER_USERNAME/schedeasy-simple-api:$GITHUB_SHA

      - name: Import GPG
        # You may pin to the exact commit or the version.
        # uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5
        uses: crazy-max/ghaction-import-gpg@v6.2.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}  # Chave privada GPG exportada como vers√£o ASCII armada ou base64
          passphrase: ${{ secrets.GPG_PASSPHRASE }}  # Senha da chave GPG (opcional)
          git_commit_gpgsign: true  # Assina todos os commits automaticamente
          git_tag_gpgsign: true  # Assina todas as tags automaticamente
          git_push_gpgsign: true  # Assina todos os pushes automaticamente
          git_committer_name: "github-actions[bot]"  # Nome do committer
          git_committer_email: "github-actions[bot]@users.noreply.github.com"

      - name: Configurar usu√°rio Git
        run: |
          git add .
          git commit -m "Bump docker version"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository: storage-app-br/schedeasy-simple-api